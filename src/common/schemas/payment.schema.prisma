// De nghi thanh toan
model PaymentRequests {
  id              Int                     @id @default(autoincrement())
  code            String                  @default(cuid())
  status          PrsPaymentRequestStatus @default(pending)
  type            PrsdPaymentRequestType  @default(order)
  files           Json?                   @default("[]")
  note            String?
  rejected_reason String?
  time_at         DateTime                @default(now())
  payment_date    DateTime                @default(now())

  employee_id Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  employee Employees?              @relation(fields: [employee_id], references: [id], onDelete: SetNull)
  payments Payments[]
  details  PaymentRequestDetails[]

  @@map("payment_requests")
}

model PaymentRequestDetails {
  id     Int     @id @default(autoincrement())
  note   String?
  amount Float?

  payment_request_id Int?
  order_detail_id    Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  payment_request PaymentRequests? @relation(fields: [payment_request_id], references: [id], onDelete: SetNull)
  order_detail    CommonDetails?   @relation(fields: [order_detail_id], references: [id], onDelete: SetNull)

  @@map("payment_request_details")
}

enum PrsPaymentRequestStatus {
  pending
  confirmed
  rejected
}

enum PrsdPaymentRequestType {
  order
  commission
}

model Payments {
  id              Int                     @id @default(autoincrement())
  code            String                  @default(cuid())
  status          PrsPaymentRequestStatus @default(pending)
  type            PrsdPaymentRequestType  @default(order)
  files           Json?                   @default("[]")
  note            String?
  rejected_reason String?
  time_at         DateTime                @default(now())
  payment_date    DateTime                @default(now())

  payment_request_id Int?
  order_id Int?
  invoice_id Int?

  payment_request PaymentRequests? @relation(fields: [payment_request_id], references: [id], onDelete: SetNull)
  order Orders? @relation(fields: [order_id], references: [id], onDelete: SetNull)
  invoice Invoices? @relation(fields: [invoice_id], references: [id], onDelete: SetNull)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  transactions Transactions[]
  @@map("payments")
}
