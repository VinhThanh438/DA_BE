model Products {
  id               Int         @id @default(autoincrement())
  image            String?
  name             String
  code             String      @default(cuid())
  vat              Float?
  packing_standard String?
  note             String?
  product_group_id Int?
  unit_id          Int?
  type             PrsProductType @default(product)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  product_group ProductGroups? @relation(fields: [product_group_id], references: [id])
  unit          Units?         @relation(fields: [unit_id], references: [id])

  extra_units               ProductUnits[]
  common_details            CommonDetails[]
  production_details        ProductionDetails[]
  bom_details               BillOfMaterialDetails[]
  material_budgets          MaterialBudgets[]
  transaction_warehouses    TransactionWarehouses[]
  @@map("products")
  purchase_request_details PurchaseRequestDetails[]
  bill_of_materials BillOfMaterials[]
}

enum PrsProductType {
  product
  material
  finished
}

model Units {
  id   Int    @id @default(autoincrement())
  name String

  product_units ProductUnits[]
  products      Products[]

  @@map("units")
  bill_of_material_details BillOfMaterialDetails[]
  details CommonDetails[]
  purchase_request_details PurchaseRequestDetails[]
  production_details ProductionDetails[]
}

model ProductGroups {
  id       Int        @id @default(autoincrement())
  name     String
  type             PrsProductType @default(product)
  products Products[]

  @@map("product_groups")
}

model ProductUnits {
  id         Int @id @default(autoincrement())
  product_id Int
  unit_id    Int
  conversion_rate Int
  product Products @relation(fields: [product_id], references: [id], onDelete: Cascade)
  unit    Units    @relation(fields: [unit_id], references: [id])
  @@map("product_units")
}
