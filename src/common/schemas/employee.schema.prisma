model Employees {
  id              Int       @id @default(autoincrement())
  code            String    @default(cuid())
  email           String?
  name            String?
  gender          Boolean?  @default(true) // true == male, false == female => Dan ong luon luon dung
  age             Int?
  marital_status  Boolean? // tinh trang hon nhan
  working_status  Boolean? // trang thai lam viec
  employee_status String? // trang thai nhan su
  date_of_birth   DateTime? @default(now())
  phone           String?
  tax             String?
  ethnicity       String? // dan toc
  religion        String? // ton giao
  attendance_code String? // ma cham cong
  description     String?
  avatar          String?

  // DINH DANH (CCCD|CMND)
  identity_code         String?
  identity_issued_place String?
  identity_issued_date  DateTime?
  identity_expired_date DateTime?
  indentity_files       Json?     @default("[]")

  // HO CHIEU
  passport_code         String?
  passport_issued_place String?
  passport_issued_date  DateTime?
  passport_expired_date DateTime?
  passport_files        Json?     @default("[]")

  organization_id Int?
  job_position_id Int?

  trial_date    DateTime? // ngay thu viec
  official_date DateTime? // ngay lam chinh thuc

  is_deleted  Boolean @default(false)
  is_default  Boolean @default(false)
  is_disabled Boolean @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  education         Educations?
  employee_finance  EmployeeFinances?
  address           Address?
  emergency_contact EmergencyContacts?
  employee_contract EmployeeContracts?
  social_insurance  SocialInsurances?

  Users             Users[]
  Partners          Partners[]
  Invoice           Invoices[]
  Quotations        Quotations[]
  Orders            Orders[]
  BankAccounts      BankAccounts[]
  OrderContracts    OrderContracts[]
  Inventories       Inventories[]
  Productions       Productions[]
  FinanceRecords    FinanceRecords[]
  TransactionOrders TransactionOrders[]

  @@map("employees")
  Organizations Organizations[]
}

enum AddressType {
  tt // Thường trú
  qq // Quê quán
  tttv // Tạm trú tạm vắng
}

enum FinanceType {
  kt
  pc
}

model Educations {
  id          Int       @id @default(autoincrement())
  employee_id Int       @unique
  employee    Employees @relation(fields: [employee_id], references: [id], onDelete: Cascade)

  education_level String? // trinh do van hoa
  training_level  String? // trinh do dao tao
  graduated_place String // noi tot nghiep
  faculty         String? // khoa
  major           String? // chuyen nganh
  graduation_year Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("educations")
}

model EmployeeFinances {
  id          Int       @id @default(autoincrement())
  employee_id Int       @unique
  employee    Employees @relation(fields: [employee_id], references: [id], onDelete: Cascade)

  name   String?
  amount Decimal?
  note   String?
  status String?
  type   FinanceType?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("employee_finances")
}

model Address {
  id          Int       @id @default(autoincrement())
  employee_id Int       @unique
  employee    Employees @relation(fields: [employee_id], references: [id], onDelete: Cascade)

  country  String?      @default("Việt Nam")
  province String? // tinh/thanh pho
  district String? // quan/huyen
  ward     String? // phuong/xa
  details  String? // dia chi chi tiet
  type     AddressType?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("address")
}

model EmployeeContracts {
  id          Int       @id @default(autoincrement())
  employee_id Int       @unique
  employee    Employees @relation(fields: [employee_id], references: [id], onDelete: Cascade)

  code       String
  type       String?
  start_date DateTime?
  end_date   DateTime?
  status     String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("employee_contracts")
}

// Bao hiem
model SocialInsurances {
  id          Int       @id @default(autoincrement())
  employee_id Int       @unique
  employee    Employees @relation(fields: [employee_id], references: [id], onDelete: Cascade)

  is_participating Boolean   @default(false) // Tham gia bhxh: tham gia/khong tham gia
  rate             Float? // ti le dong
  insurance_number String? // so bao hiem
  insurance_salary Float? // luong dong
  start_date       DateTime? // ngay tham gia

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("social_insurances")
}

// Thong tin lien he
model EmergencyContacts {
  id           Int     @id @default(autoincrement())
  employee_id  Int?    @unique
  name         String?
  email        String?
  relationship String?
  address      String?
  phone        String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  employee Employees? @relation(fields: [employee_id], references: [id], onDelete: Cascade)

  @@map("emergency_contacts")
}
