enum Gender {
  male
  female
  other
}

model Employees {
  id              Int       @id @default(autoincrement())
  code            String    @default(cuid())
  email           String?
  name            String?
  gender          Gender    @default(other)
  age             Int?
  marital_status String? // tinh trang hon nhan
  working_status  String?
  employee_status String? // trang thai nhan su
  base_salary Decimal? // Luong co ban
  date_of_birth   DateTime? @default(now())
  phone           String?
  tax             String?
  ethnicity       String? // dan toc
  religion        String? // ton giao
  attendance_code String? // ma cham cong
  description     String?
  avatar          String?

  // DINH DANH (CCCD|CMND)
  identity_code         String?
  identity_issued_place String?
  identity_issued_date  DateTime?
  identity_expired_date DateTime?
  indentity_files       Json?     @default("[]")

  // HO CHIEU
  passport_code         String?
  passport_issued_place String?
  passport_issued_date  DateTime?
  passport_expired_date DateTime?
  passport_files        Json?     @default("[]")

  organization_id Int?
  job_position_id Int?

  trial_date    DateTime? // ngay thu viec
  official_date DateTime? // ngay lam chinh thuc

  is_deleted  Boolean @default(false)
  is_default  Boolean @default(false)
  is_disabled Boolean @default(false)
  has_user_account Boolean @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  educations         Educations[]
  employee_finances  EmployeeFinances[]
  addresses            Address[]
  emergency_contacts EmergencyContacts[]
  employee_contracts EmployeeContracts[]
  insurances  Insurances[]

  users              Users[]
  partners           Partners[]
  invoices           Invoices[]
  quotations         Quotations[]
  orders             Orders[]
  bank_accounts      BankAccounts[]
  inventories        Inventories[]
  finance_records    FinanceRecords[]
  transaction_orders TransactionOrders[]

  job_position  JobPositions?   @relation(fields: [job_position_id], references: [id], onDelete: Cascade)
  organizations Organizations[]

  @@map("employees")
  productions Productions[]
  contracts Contracts[]
  purchase_requests PurchaseRequests[]
}

enum AddressType {
  tt // Thường trú
  ht // nơi ở hiện tại 
}

enum FinanceType {
  kt
  pc
}

model Educations {
  id          Int       @id @default(autoincrement())
  employee_id Int
  employee    Employees @relation(fields: [employee_id], references: [id], onDelete: Cascade)

  education_level String? // trinh do van hoa
  training_level  String? // trinh do dao tao
  graduated_place String? // noi tot nghiep
  faculty         String? // khoa
  major           String? // chuyen nganh
  graduation_year Int?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("educations")
}

model EmployeeFinances {
  id          Int       @id @default(autoincrement())
  employee_id Int
  employee    Employees @relation(fields: [employee_id], references: [id], onDelete: Cascade)

  name   String?
  amount Decimal?
  note   String?
  status String?
  type   FinanceType?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("employee_finances")
}

model Address {
  id          Int       @id @default(autoincrement())
  employee_id Int
  employee    Employees @relation(fields: [employee_id], references: [id], onDelete: Cascade)

  country  String?      @default("Việt Nam")
  province String? // tinh/thanh pho
  district String? // quan/huyen
  ward     String? // phuong/xa
  details  String? // dia chi chi tiet
  type     AddressType?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("address")
}

model EmployeeContracts {
  id          Int       @id @default(autoincrement())
  employee_id Int
  employee    Employees @relation(fields: [employee_id], references: [id], onDelete: Cascade)

  code       String
  type       String?
  start_date DateTime?
  end_date   DateTime?
  salary    Decimal?
  is_applied     Boolean? @default(false) // da ap dung hop dong

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("employee_contracts")
}

// Bao hiem
model Insurances {
  id          Int       @id @default(autoincrement())
  employee_id Int
  employee    Employees @relation(fields: [employee_id], references: [id], onDelete: Cascade)

  is_participating Boolean   @default(false) // Tham gia bhxh: tham gia/khong tham gia
  rate             Float? // ti le dong
  insurance_number String? // so bao hiem
  insurance_salary Float? // luong dong
  start_date       DateTime? // ngay tham gia

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("insurances")
}

// Thong tin lien he
model EmergencyContacts {
  id           Int     @id @default(autoincrement())
  employee_id  Int?
  name         String?
  email        String?
  relationship String?
  address      String?
  phone        String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  employee Employees? @relation(fields: [employee_id], references: [id], onDelete: Cascade)

  @@map("emergency_contacts")
}
